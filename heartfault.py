import urllib3
import requests
import json
import time

#############################
#       Configuration       #
#############################

# DEBUG
DEBUG = False

threshold_accuracy = 0.8

# Bot 1
bot_token = '980627700:AAHMS1GH0NUgmftp1cfBH_3VChmF0y0c6Lc'
bot_chatID = '503250283'

# Bot 2
bot_token1 = '1138239818:AAHXQbALffUDb5wP6XHV-Vv5OasSAdtkyaQ'
bot_chatID1 = '886735979'

# Auto AI Endpoint URL
ML_url = 'https://eu-gb.ml.cloud.ibm.com/v4/deployments/318113ec-e06a-4603-944c-216026daa81c/predictions'
ML_api_key = "_DOThp9jaFsk4FKLvbsAzDY64BfUe0IhwTFxp9kbkTVi"

# IAM Configuration
IAM_url = "https://iam.bluemix.net/oidc/token"
headers = {"Content-Type": "application/x-www-form-urlencoded"}
IBM_cloud_IAM_uid = "bx"
IBM_cloud_IAM_pwd = "bx"

#############################


def telegram_bot_sendtext(bot_message, bot_token, bot_chatID):
    send_text = f'https://api.telegram.org/bot{bot_token}/sendMessage?chat_id={bot_chatID}&parse_mode=Markdown&text={bot_message}'
    response = requests.get(send_text)
    return response.json()


# Obtain IAM Credentials
data = f"apikey={ML_api_key}&grant_type=urn:ibm:params:oauth:grant-type:apikey"
response = requests.post(IAM_url, headers=headers, data=data, auth=(
    IBM_cloud_IAM_uid, IBM_cloud_IAM_pwd))
iam_token = response.json()["access_token"]


# NOTE: generate iam_token and retrieve ml_instance_id based on provided documentation
header = {'Content-Type': 'application/json',
          'Authorization': f'Bearer {iam_token}',
          'ML-Instance-ID': "3d7393fc-2f51-4e16-83a4-f877849b118c"
          }


# NOTE: manually define and pass the array(s) of values to be scored in the next line

if DEBUG == True:
    payload_scoring = {"input_data": [{
        "fields": [0.93223285675048800, 0.86967855691909700, 0.88618594408035200, 0.92962640523910500, 0.90877497196197500, 0.93397045135498000, 0.80104255676269500, 0.74978280067443800, 0.68722850084304800, 0.63509988784790000, 0.64986968040466300, 0.63509988784790000, 0.65508252382278400, 0.66463947296142500, 0.63336229324340800, 0.74630755186080900, 0.87141615152359000, 0.93831449747085500, 1.00000000000000000, 0.94874024391174300, 0.39617723226547200, 0.00000000000000000, 0.03909643739461890, 0.12858383357524800, 0.30582103133201500, 0.64031279087066600, 0.61772370338439900, 0.53779321908950800, 0.35273674130439700, 0.22067767381668000, 0.25629886984825100, 0.35794961452484100, 0.48218938708305300, 0.57080799341201700, 0.57775849103927600, 0.62033015489578200, 0.62206774950027400, 0.61859250068664500, 0.62641179561614900, 0.61251085996627800, 0.62206774950027400, 0.59774106740951500, 0.61859250068664500, 0.63075584173202500, 0.62293660640716500, 0.62814944982528600, 0.60642921924591000, 0.64465683698654100, 0.67158991098403900, 0.62293660640716500, 0.67332756519317600, 0.66985231637954700, 0.68722850084304800, 0.72458732128143300, 0.71850562095642000, 0.75065159797668400, 0.72806257009506200, 0.73935705423355100, 0.74804520606994600, 0.74370110034942600, 0.78887921571731500, 0.73935705423355100, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000],
        "values":[[0.9484824538231, 0.6900958418846, 0.0710862651467, 0.0547124594450, 0.0507188513875, 0.0738817900419, 0.1198083087802, 0.1337859481573, 0.1397763639688, 0.1373801976442, 0.1353833824396, 0.1429712474346, 0.1461661309004, 0.1445686966181, 0.1445686966181, 0.1513578295708, 0.1533546298742, 0.1609424948692, 0.1561501622200, 0.1589456796646, 0.1733226776123, 0.1713258773088, 0.1781150102615, 0.1845047920942, 0.1904952079058, 0.1956869065762, 0.2056709229946, 0.2212460041046, 0.2352236360312, 0.2428115010262, 0.2480031996965, 0.2559904158115, 0.2619808316231, 0.2707667648792, 0.2759584784508, 0.2687699794769, 0.2603833973408, 0.2472044676542, 0.2452076673508, 0.2236421704292, 0.1996805071831, 0.1916932910681, 0.1793130934238, 0.1765175759792, 0.1669329106808, 0.1629392951727, 0.1649360954762, 0.1585463285446, 0.1509584635496, 0.1541533619165, 0.1545527130365, 0.1493610292673, 0.1561501622200, 0.1541533619165, 0.1577475965023, 0.1677316278219, 0.1681309938431, 0.1705271601677, 0.1833067089319, 0.1785143762827, 0.1821086257696, 0.1797124594450, 0.1805111765862, 0.1793130934238, 0.1745207607746, 0.1725239604712, 0.1717252433300, 0.1769169270992, 0.1681309938431, 0.1701277941465, 0.1673322618008, 0.1653354614973, 0.1625399291515, 0.1629392951727, 0.1597444117069, 0.1565495133400, 0.1525559127331, 0.1565495133400, 0.1605431288481, 0.1613418459892, 0.1565495133400, 0.1525559127331, 0.1557507961988, 0.1637380123138, 0.1585463285446, 0.1657348275185, 0.1861022412777, 0.1936900913715, 0.2256389707327, 0.2208466380835, 0.2104632556438, 0.2180511206388, 0.2424121350050, 0.2216453701258, 0.2092651724815, 0.2288338690996, 0.1853035092354, 0.1625399291515, 0.1385782808065, 0.1325878649950, 0.1277955323458, 0.1289936155081, 0.1265974491835, 0.1301916986704, 0.1214057505131, 0.1301916986704, 0.1242012754083, 0.1253993660212, 0.1178115010262, 0.1034345030785, 0.1186102256179, 0.1845047920942, 0.4137380123138, 0.7943290472031, 1.0000000000000, 0.3214856088161, 0.0000000000000, 0.0463258773088, 0.0383386574686, 0.0946485623717, 0.1190095841885, 0.1265974491835, 0.1345846652985, 0.1361821144819, 0.1317891329527, 0.1341852992773, 0.1413737982512, 0.1425718814135, 0.1469648629427, 0.1469648629427, 0.1477635800838, 0.1545527130365, 0.1585463285446, 0.1625399291515, 0.1649360954762, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000, 0.0000000000000]]
    }]}

else:
    inputdata = [float(d) for d in input("Enter input data").split(",")]
    payload_scoring = {"input_data": [{
        "fields": [0.93223285675048800, 0.86967855691909700, 0.88618594408035200, 0.92962640523910500, 0.90877497196197500, 0.93397045135498000, 0.80104255676269500, 0.74978280067443800, 0.68722850084304800, 0.63509988784790000, 0.64986968040466300, 0.63509988784790000, 0.65508252382278400, 0.66463947296142500, 0.63336229324340800, 0.74630755186080900, 0.87141615152359000, 0.93831449747085500, 1.00000000000000000, 0.94874024391174300, 0.39617723226547200, 0.00000000000000000, 0.03909643739461890, 0.12858383357524800, 0.30582103133201500, 0.64031279087066600, 0.61772370338439900, 0.53779321908950800, 0.35273674130439700, 0.22067767381668000, 0.25629886984825100, 0.35794961452484100, 0.48218938708305300, 0.57080799341201700, 0.57775849103927600, 0.62033015489578200, 0.62206774950027400, 0.61859250068664500, 0.62641179561614900, 0.61251085996627800, 0.62206774950027400, 0.59774106740951500, 0.61859250068664500, 0.63075584173202500, 0.62293660640716500, 0.62814944982528600, 0.60642921924591000, 0.64465683698654100, 0.67158991098403900, 0.62293660640716500, 0.67332756519317600, 0.66985231637954700, 0.68722850084304800, 0.72458732128143300, 0.71850562095642000, 0.75065159797668400, 0.72806257009506200, 0.73935705423355100, 0.74804520606994600, 0.74370110034942600, 0.78887921571731500, 0.73935705423355100, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000, 0.00000000000000000],
        "values":[inputdata]
    }]}

response_scoring = requests.post(ML_url, json=payload_scoring, headers=header)
results = json.loads(response_scoring.text)
alert = results['predictions'][0]['values'][0]
if alert[0] == 'N' and alert[1][0] > threshold_accuracy:
    print("Alerting emergency services")
    response_bot1 = telegram_bot_sendtext(
"Person nearby is having a heart attack", bot_token, bot_chatID)
    #response_bot2 = telegram_bot_sendtext("Person nearby is having heart attack", bot_token1, bot_chatID1)
